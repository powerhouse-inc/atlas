scalar Amount_Tokens
scalar EthereumAddress
scalar Amount_Percentage
scalar EmailAddress
scalar Date
scalar DateTime
scalar URL
scalar Amount_Money
scalar OLabel
scalar Currency
scalar PHID
scalar OID
type AtlasScopeState {
  name: String
  docNo: String # e.g, A.1
  content: String # change to markdown later (includes links, tables...)
  masterStatus: Status # Aggregation: MasterStatus can exist independently of Scope
  globalTags: [GlobalTag!]!
	originalContextData: [PHID!]!
	provenance: URL # p0Hub backlink
	notionId: String # verify if this can be changed to UUID type
}


enum Status {
  PLACEHOLDER
  PROVISIONAL # enables ecosystem participants to interact with the material in a practical context, resulting in valuable feedback or other data concerning the Document's appropriateness.
  APPROVED # material instance can be integrated into the Atlas
  DEFERRED
  ARCHIVED
}

enum GlobalTag {
    RECURSIVE_IMPROVEMENT,
    SCOPE_ADVISOR,
    DAO_TOOLKIT,
    PURPOSE_SYSTEM,
    ML__LOW_PRIORITY,
    EXTERNAL_REFERENCE,
    ML__DEFER,
    SUBDAO_INCUBATION,
    V1__MIP,
    ML__HIGH_PRIORITY,
    ECOSYSTEM_INTELLIGENCE,
    LEGACY_TERM__USE_APPROVED,
    CAIS,
    INTERNAL_REFERENCE,
    FACILITATORDAO,
    ML___MED_PRIORITY,
    AVC,
    P0_HUB_ENTRY_NEEDED,
    ANON_WORKFORCE,
    NEWCHAIN,
    ML__SUPPORT_DOCS_NEEDED,
    SUBDAO_REWARDS,
    TWO_STAGE_BRIDGE,
}




# scope

input UpdateScopeInput {
  masterStatus: Status
  globalTags: [GlobalTag!]
}

input PopulateScopeInput {
  name: String
  docNo: String # e.g, A.1
  content: String # change to markdown later (includes links, tables...)
  masterStatus: Status
  globalTags: [GlobalTag!]
	originalContextData: [PHID!]
	provenance: URL # p0Hub backlink
	notionId: String # verify if this can be changed to UUID type
}